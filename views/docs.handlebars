    {{> header}}

    <div class="col-md-8">
      <article class="blog-post">
        <h2 class="blog-post-title mb-1">Простая чат-система</h2>
        <p class="blog-post-meta">Июнь 17, 2022 by <a href="#">kadzoni</a></p>

        <p>Краткая инструкция использования чата и описание принципов его работы</p>
        <hr>
        <p>Данная чат-система была разработана в качестве проекта для выпускной квалификационной работы, студента ЮУрГТК</p>
        <h3>Руководство пользователя:</h3>
        <p>Функционал пользовательского интерфейса представлен: регистрацией, авторизацией, подключением к комнатам чата и возможностью получать и отправлять сообщения</p>
        <p>Авторизация представлена мультиформой, если вы зарегестрированны, то авторизуетесь. И наоборот если пытаетесь авторизоваться с незарегистрированной электронной почты, то система зарегистрирует вас.</p>
        <h5>Для пользования чатом:</h5>
        <ol>
          <li>Зарегистрируйтесь/авторизируйтесь</li>
          <li>С главной страницы перейдите в желаемую комнату чата</li>
          <li>Пишите и наслаждайтесь!</li>
        </ol>
        <hr>
        <h3>Краткий обзор серверной части</h3>
        <h5>Основные положения, при разработке</h5>
        <ul>
          <li>Чат-система должна быть разработана на node.js</li>
          <li>Отправка и получение сообщений должна происходить при помощи веб-сокетов, с минимальной задержкой для пользователя</li>
          <li>Сообщение после отправки, сохраняется в базу данных</li>
          <li>Сообщения не должны путаться между комнатами чата</li>
          <li>Работа с базой данных, должна осуществляться через ORM</li>
        </ul>
        <h5>Как оно функционирует?</h5>
        <p>Авторизированный пользователь, переходя на страницу комнаты чата, подключается к сокету. При отправке сообщения, мы фиксируем эту активность, через jquery в котороем формируем два запроса к серверу. Первый это запрос, через сокет на добавление отправляемого сообщения остальным пользователям чата. Второй это сохранение сообщения в базу данных, что необходимо для сохранения истории сообщений, после отключения от сокета.</p>
        <h5>Стек разработки</h5>
        <ul>
          <li>Node.js express - фреймворк</li>
          <li>Handlebars - шаблонизатор</li>
          <li>Prisma - ORM </li>
        </ul>
      </article>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" 
    integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>